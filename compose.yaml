version: '3.8'

services:
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      # Ajout de paramètres supplémentaires pour la sécurité et la performance
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # Optionnel : Utiliser un volume bind-mounted pour persister les données localement
      # - ./docker/db/data:/var/lib/postgresql/data:rw
    networks:
      - symfony_network
    restart: unless-stopped

  ###< doctrine/doctrine-bundle ###

  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_php_films
    volumes:
      - ./:/var/www/html:cached
    networks:
      - symfony_network
    depends_on:
      - database
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    container_name: symfony_nginx
    ports:
      - "8080:80"
    volumes:
      - ./:/var/www/html:ro
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - symfony_network
    depends_on:
      - php
    restart: unless-stopped

volumes:
  database_data:

networks:
  symfony_network:
    driver: bridge
